/* Have the function TripleDouble(num1,num2) take both parameters being passed, and 
return 1 if there is a straight triple of a number at any place in num1 and also a straight 
double of the same number in num2. For example: if num1 equals 451999277 and num2 equals 
41177722899, then return 1 because in the first parameter you have the straight triple 999 
and you have a straight double, 99, of the same number in the second parameter. If this 
isn't the case, return 0. */

function TripleDouble(num1,num2) { 
  num1 = num1.toString().split("");
  num2 = num2.toString().split("");
  var triples = [];
  for (var i=0; i<num1.length; i++){
    var count = 1;
    var x = +(num1[i]);
    var y = i+1;
    while (x === +(num1[y])){
      count++;
      y++;
    }
    i += count-1;
    if (count>=3){
      triples.push(x);
    }
  }
  for (i=0; i<num2.length; i++){
    count = 1;
    x = +(num2[i]);
    y = i+1;
    for (var h=0; h<triples.length; h++){
      if (x===triples[h]){
        while (x === +(num2[y])){
          count++;
          y++;
        }
      }
      i+=count-1
      if (count>=2){
        return 1;
      }
    }
  }
  return 0;
}
